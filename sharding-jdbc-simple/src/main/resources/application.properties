## 允许重复覆盖注册Bean
spring.main.allow-bean-definition-overriding=true
## 定义数据源名称
spring.shardingsphere.datasource.names=m1,m2,u
## m1数据源
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driverClassName=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localserver:3306/order_db_1?useUnicode=true
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=123456
## m2数据源
spring.shardingsphere.datasource.m2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m2.driverClassName=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m2.url=jdbc:mysql://localserver:3306/order_db_2?useUnicode=true
spring.shardingsphere.datasource.m2.username=root
spring.shardingsphere.datasource.m2.password=123456
## 用户数据源 u
spring.shardingsphere.datasource.u.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.u.driverClassName=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.u.url=jdbc:mysql://localserver:3306/user_db?useUnicode=true
spring.shardingsphere.datasource.u.username=root
spring.shardingsphere.datasource.u.password=123456

### 订单库表相关 ###
## 真实的表名  订单(逻辑)表t_order
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=m$->{1..2}.t_order_$->{1..2}
## 主键生成策略
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
## 分库策略  database-strategy
# 按表中的那个字段进行分
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.sharding-column=user_id
# 表达式
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.algorithm-expression=m$->{user_id % 2 + 1}
## 分表策略  table-strategy
# 按表中的那个字段分片
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
# 分片表达式
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2 + 1}
### 订单库表相关-结束 ###

### 用户库表相关 ###
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=u.t_user
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.sharding-column=user_id
# 分片表达式这样代表不分片
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user
### 用户库表相关-结束 ###

### 公共表 ###
spring.shardingsphere.sharding.broadcast-tables=t_dict
### 公共表-结束 ###

## 打开日志
spring.shardingsphere.props.sql.show=true

## 日志相关
logging.level.root=info
logging.level.com.itheima.dbsharding=debug
logging.level.druid.sql=debug

